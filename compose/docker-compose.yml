version: "3.8"

# https://docs.docker.com/engine/reference/commandline/compose_up/#options
# docker compose -f docker-compose.yml up --build --pull=always
# docker compose alpha watch
# docker compose -f docker-compose.yml down
name: openjdk

services:
  app-amd64:
    container_name: ${APP_NAME_AMD64}
    build:
      context: ..
      target: openjdk
    platform: linux/amd64
    restart: always
    working_dir: /app
    volumes:
      - ./:/src:rw
      - app-data:/data
    command: [ "java", "--show-version", "-jar", "app.jar", "${APP_NAME_AMD64:-amd64}" ]
    environment:
      - PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - CONTAINER_NAME=${APP_NAME_AMD64}
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - db
    # privileged: true
    # cap_add:
    #   - NET_ADMIN
    #   - SYS_ADMIN
    # tmpfs:
    #   - /run
    #   - /var/run

  app-arm64:
    container_name: ${APP_NAME_ARM64}
    build:
      context: ..
      target: openjdk
    platform: linux/arm64
    restart: always
    working_dir: /app
    volumes:
      - ./:/src:rw
      - app-data:/data
    command: [ "java", "--show-version", "-jar", "app.jar", "${APP_NAME_ARM64:-arm64}" ]
    environment:
      - PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - CONTAINER_NAME=${APP_NAME_ARM64}
    ports:
      - "8081:80"
    networks:
      - app-network
    depends_on:
      - db
    x-develop:
      watch:
        - path: ../src/App.java
          action: rebuild
        - path: ./compose/env
          action: sync
          target: /app/

  db:
    container_name: postgres
    image: postgres:alpine
    restart: always
    env_file: env/dev.env
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  db-admin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    env_file: env/pgadmin.env
    volumes:
      - ./config/servers.json:/pgadmin4/servers.json
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    ports:
      - "8082:8089"
    depends_on:
      - db

  db-files:
    container_name: pgdata-files
    image: openjdk:23-slim
    restart: always
    volumes:
      - pg-data:/data/pg
      - pgadmin-data:/data/pgadmin
      - app-data:/data/app
    ports:
      - "8083:8000"
    networks:
      - app-network
    command: [ "jwebserver", "-b", "0.0.0.0", "-d", "/data" ]
    depends_on:
      - db

#  cadvisor:
#    container_name: cadvisor
#    image: gcr.io/cadvisor/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /sys:/sys:ro
#      - /dev/disk/:/dev/disk:ro
#    privileged: true
#    devices:
#      - /dev/kmsg
#    ports:
#      - "9000:8080"
#    networks:
#      - app-network
#    # Disabling until it fixes on M1
#    # restart: always

volumes:
  pg-data:
  pgadmin-data:
  app-data:

networks:
  app-network:
