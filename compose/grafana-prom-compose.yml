version: "3.8"

# docker compose -f compose/grafana-prom-compose.yml up --build --pull=always
services:
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    network_mode: host
    volumes:
      - prometheus:/etc/prometheus/
      - ./config/prometheus/prometheus.yaml:/prometheus.yaml
    command:
      - --config.file=/prometheus.yaml
      - --enable-feature=otlp-write-receiver
      - --enable-feature=native-histograms
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    depends_on:
      - node_exporter
      - cadvisor

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - '9100:9100'

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    network_mode: host
    volumes:
      - ./config/prometheus/otelcol-config.yaml:/config.yaml
    command:
      - --config=file:/config.yaml

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - "8080:8080"
    # restart: unless-stopped
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    network_mode: host
    command:
      - "-housekeeping_interval=10s"
      - "-docker_only=true"
    devices:
      - /dev/kmsg:/dev/kmsg

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    network_mode: host
    ports:
      - "3000:3000"
    volumes:
      - "grafana:/var/lib/grafana"
    depends_on:
      - prometheus

volumes:
  prometheus:
    name: prometheus
  grafana:
    name: grafana