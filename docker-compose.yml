version: "3.8"

# docker compose -f docker-compose.yml up
services:
  svc1:
    container_name: svc1
    build:
      context: .
      target: openjdk
    restart: always
    working_dir: /app
    volumes:
      - ./:/src:rw
      - app-data:/data
    command: [ "java", "--show-version", "-jar", "app.jar", "${SERVICE:-svc1}" ]
    ports:
      - "8080:80"
    networks:
      - app-network
    # platform: linux/amd64
    # privileged: true
    # cap_add:
    #   - NET_ADMIN
    #   - SYS_ADMIN
    depends_on:
      - db
  # tmpfs:
  #   - /run
  #   - /var/run

  svc2:
    container_name: svc2
    build:
      context: .
      target: openjdk
    restart: always
    working_dir: /app
    volumes:
      - ./:/src:rw
      - app-data:/data
    command: [ "java", "--show-version", "-jar", "app.jar", "${SERVICE:-svc2}" ]
    ports:
      - "8081:80"
    networks:
      - app-network
    depends_on:
      - db
    # platform: linux/arm64

  db:
    container_name: postgres
    image: postgres:alpine
    restart: always
    env_file: env/dev.env
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  db-admin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    env_file: env/pgadmin.env
    volumes:
      - ./config/servers.json:/pgadmin4/servers.json
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    ports:
      - "8089:8089"
    depends_on:
      - db

  db-files:
    container_name: pgdata-files
    image: openjdk:21-slim
    restart: always
    volumes:
      - pg-data:/data/pg
      - pgadmin-data:/data/pgadmin
      - app-data:/data/app
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: [ "jwebserver", "-b", "0.0.0.0", "-d", "/data" ]
    depends_on:
      - db

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    ports:
      - "9000:8080"
    networks:
      - app-network
    # Disabling until it fixes on M1
    # restart: always

volumes:
  pg-data:
  pgadmin-data:
  app-data:

networks:
  app-network:
